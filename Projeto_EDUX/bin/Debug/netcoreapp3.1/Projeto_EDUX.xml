<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Projeto_EDUX</name>
    </assembly>
    <members>
        <member name="M:Projeto_EDUX.Controllers.AlunoTurmaController.Get">
            <summary>
            Listar as Alunos
            </summary>
            <returns>Ok ou badResquest em caso de exceção</returns>
            
        </member>
        <member name="M:Projeto_EDUX.Controllers.AlunoTurmaController.Get(System.Guid)">
             <summary>
              Buscar aluno por Id
             </summary>
             <param name="id">id do aluno</param>
             <returns>Aluno conforme o id</returns>
            
        </member>
        <member name="M:Projeto_EDUX.Controllers.AlunoTurmaController.Post(Projeto_EDUX.Domains.AlunoTurma)">
            <summary>
            Adicionar Aluno
            </summary>
            <param name="alunoTurma">informações do aluno</param>
            <returns>adiciona aluno</returns>
            
        </member>
        <member name="M:Projeto_EDUX.Controllers.AlunoTurmaController.Put(System.Guid,Projeto_EDUX.Domains.AlunoTurma)">
            <summary>
            Editar dados do aluno
            </summary>
            <param name="id">id da dica</param>
            <param name="alunoTurma">informações do aluno</param>
            <returns>dados atualizadOs do aluno </returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.AlunoTurmaController.Excluir(System.Guid)">
            <summary>
            Excluir aluno
            </summary>
            <param name="id">id do aluno a ser excluido</param>
        </member>
        <member name="M:Projeto_EDUX.Controllers.CategoriaController.Get">
            <summary>
            Ler todos as categorias cadastrados
            </summary>
            <returns>Lista de categorias</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.CategoriaController.Get(System.Guid)">
            <summary>
            Busca um unica categoria  no sistema pelo seu ID
            </summary>
            <param name="id">ID do categoria</param>
            <returns>Categoria procurado</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.CategoriaController.Post(Projeto_EDUX.Domains.Categoria)">
            <summary>
            Cadastra uma categoria no sistema
            </summary>
            <param name="categoria">categoria</param>
            <returns>Curso cadastrado</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.CategoriaController.Delete(System.Guid)">
            <summary>
            Exclui um curso do sistema
            </summary>
            <param name="id">ID do curso a ser excluida</param>
            <returns>ID do curso excluido</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.CursoController.Get">
            <summary>
            Ler todos os cursos cadastrados
            </summary>
            <returns>Lista dos cursos</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.CursoController.Get(System.Guid)">
            <summary>
            Busca um unico curso no sistema pelo seu ID
            </summary>
            <param name="id">ID do curso</param>
            <returns>Curso procurado</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.CursoController.Post(Projeto_EDUX.Domains.Curso)">
            <summary>
            Cadastra um curso no sistema
            </summary>
            <param name="curso">Curso</param>
            <returns>Curso cadastrado</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.CursoController.Delete(System.Guid)">
            <summary>
            Exclui um curso do sistema
            </summary>
            <param name="id">ID do curso a ser excluida</param>
            <returns>ID do curso excluido</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.CurtidaController.Get(System.Guid)">
            <summary>
             Buscar curtida através do id
            </summary>
            <param name="id">id da curtida</param>
            <returns>Curtida correspondente ao id</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.CurtidaController.Post(Projeto_EDUX.Domains.Curtida)">
            <summary>
            Adicionar curtidas
            </summary>
            <param name="curtida">Vixualização das curtidas</param>
            <returns>adiciona curtidas</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.CurtidaController.Delete(System.Guid)">
            <summary>
            Excluir curtida
            </summary>
            <param name="id">id da curtida</param>
            <returns>exclui a curtida</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.DicaController.Get">
            <summary>
            Listar as Dicas
            </summary>
            <returns></returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.DicaController.Get(System.Guid)">
            <summary>
             Buscar dica por Id
            </summary>
            <param name="id">id da dica</param>
            <returns>a dica referente ao id</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.DicaController.Post(Projeto_EDUX.Domains.Dica)">
            <summary>
            Adicionar Dica
            </summary>
            <param name="dica">as informações da dica</param>
            <returns>adiciona a dica</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.DicaController.Put(System.Guid,Projeto_EDUX.Domains.Dica)">
            <summary>
            Editar uma dica 
            </summary>
            <param name="id">id da dica</param>
            <param name="dica">informações da dica</param>
            <returns>a dica alterada</returns>
            
        </member>
        <member name="M:Projeto_EDUX.Controllers.DicaController.Delete(System.Guid)">
            <summary>
            Excluir uma dica
            </summary>
            <param name="id">id da dica a ser excluida</param>
        </member>
        <member name="M:Projeto_EDUX.Controllers.InstituicaoController.Get">
            <summary>
            Ler todos as instituicoes cadastradas
            </summary>
            <returns>Lista das instituicoes</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.InstituicaoController.Get(System.Guid)">
            <summary>
            Busca uma unica instituicao pelo seu ID
            </summary>
            <param name="id">ID da instituicao</param>
            <returns>Instituicao procurada</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.InstituicaoController.Get(System.String)">
            <summary>
            Busca uma instituicao pelo seu nome
            </summary>
            <param name="nome">Nome da instituicao</param>
            <returns>Instituicao procurada</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.InstituicaoController.Post(Projeto_EDUX.Domains.Instituicao)">
            <summary>
            Cadastra uma instituicao no sistema
            </summary>
            <param name="instituicao">Instituicao toda</param>
            <returns>Instituicao cadastrada</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.InstituicaoController.Delete(System.Guid)">
            <summary>
            Exclui uma instituicao do sistema
            </summary>
            <param name="id">ID da instituicao a ser excluida</param>
            <returns>ID da instituicao excluida</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.LoginController.Login(Projeto_EDUX.Domains.Usuario)">
            <summary>
            Dados para logar um usuario
            </summary>
            <param name="login">Login do usuario</param>
            <returns>Usuario logado</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ObjetivoAlunoController.Get">
            <summary>
            Lista todos os objetivos feitos pelos alunos
            </summary>
            <returns>Objetivos cumpridos</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ObjetivoAlunoController.Get(System.Guid)">
            <summary>
            Busca determinado objetivo pelo ID
            </summary>
            <param name="id">Id do objetivo cumprido</param>
            <returns>Objetivo encontrado</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ObjetivoAlunoController.Post(Projeto_EDUX.Domains.ObjetivoAluno)">
            <summary>
            Adiciona dados de avaliação do objetivo proposto
            </summary>
            <param name="objetivo">Dados do aluno</param>
            <returns>Dados adicionados</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ObjetivoAlunoController.Put(System.Guid,Projeto_EDUX.Domains.ObjetivoAluno)">
            <summary>
            Alterar dados de avaliação do objetivo
            </summary>
            <param name="id">ID do objetivo</param>
            <param name="objetivo">Objetivo proposto</param>
            <returns>Dados alterados</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ObjetivoAlunoController.Delete(System.Guid)">
            <summary>
            Deleta dados de avaliação de objetivos propostos
            </summary>
            <param name="id">Id do objetivo</param>
            <returns>Dados deletados</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ObjetivoController.Get">
            <summary>
            Ler todos os Objetivos cadastrados
            </summary>
            <returns>Lista de objetivos</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ObjetivoController.Get(System.Guid)">
            <summary>
            Busca um unico objetivo no sistema pelo seu ID
            </summary>
            <param name="id">ID do objetivo</param>
            <returns>Categoria procurado</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ObjetivoController.Post(Projeto_EDUX.Domains.Objetivo)">
            <summary>
            Cadastra um Objetivo no sistema
            </summary>
            <param name="objetivo">objetivo</param>
            <returns>objetivo cadastrado</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ObjetivoController.Delete(System.Guid)">
            <summary>
            Exclui um objetivodo sistema
            </summary>
            <param name="id">ID do objetivo a ser excluida</param>
            <returns>ID do objetivo excluido</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.PerfilController.Get">
            <summary>
            Listar as Permições
            </summary>
            <returns>lista de permissões e id</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.PerfilController.Get(System.Guid)">
            <summary>
            Buscar uma permição por ID 
            </summary>
            <param name="id">Id da permição </param>
            <returns>permição do id</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.PerfilController.Post(Projeto_EDUX.Domains.Perfil)">
            <summary>
            Adicionar uma permição nova          
            </summary>
            <param name="perfil">é a nova permição</param>
            <returns>permição adicionada</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.PerfilController.Put(System.Guid,Projeto_EDUX.Domains.Perfil)">
            <summary>
            Editar uma permição
            </summary>
            <param name="id">id da permição que deseja editar</param>
            <param name="perfil">a permição editada</param>
            <returns>a permição editada</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.PerfilController.Delete(System.Guid)">
            <summary>
            Deletar uma permição 
            </summary>
            <param name="id">id da permição que deseja excluir</param>
            <returns>exclui a permição</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.PostController.Get">
            <summary>
            Listar as Dicas
            </summary>
            <returns></returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.PostController.Get(System.Guid)">
            <summary>
             Buscar dica por Id
            </summary>
            <param name="id">id da dica</param>
            <returns>a dica referente ao id</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.PostController.Post(Projeto_EDUX.Domains.Post)">
            <summary>
            Adicionar Dica
            </summary>
            <param name="post"></param>
            <param name="dica">as informações da dica</param>
            <returns>adiciona a dica</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.PostController.Put(System.Guid,Projeto_EDUX.Domains.Post)">
            <summary>
            Editar uma dica 
            </summary>
            <param name="id">id da dica</param>
            <param name="dica">informações da dica</param>
            <returns>a dica alterada</returns>
            
        </member>
        <member name="M:Projeto_EDUX.Controllers.PostController.Delete(System.Guid)">
            <summary>
            Excluir uma dica
            </summary>
            <param name="id">id da dica a ser excluida</param>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ProfessorTurmaController.Get">
             <summary>
             Listar professores
             </summary>
             <returns>Ok ou badRequest em caso de exceção</returns>
            
        </member>
        <member name="M:Projeto_EDUX.Controllers.ProfessorTurmaController.Get(System.Guid)">
            <summary>
             Buscar professor pelo id
            </summary>
            <param name="id">id do professor</param>
            <returns>dados do professsor através do id</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ProfessorTurmaController.Post(Projeto_EDUX.Domains.ProfessorTurma)">
            <summary>
            Adicionar professor
            </summary>
            <param name="professor">dados do professor</param>
            <returns>professor adicionado</returns>
            
        </member>
        <member name="M:Projeto_EDUX.Controllers.ProfessorTurmaController.Put(System.Guid,Projeto_EDUX.Domains.ProfessorTurma)">
            <summary>
            Editar dados do professor
            </summary>
            <param name="id">id do professor</param>
            <param name="professorTurma">dados do professor</param>
            <returns>dados do professor adicionado ok</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.ProfessorTurmaController.Delete(System.Guid)">
            <summary>
            Excluir um cadastro de professor
            </summary>
            <param name="id">id do cadastro correspondente ao professor a ser excluida</param>
        </member>
        <member name="M:Projeto_EDUX.Controllers.TurmaController.Get">
            <summary>
            Lista todas as turmas
            </summary>
            <returns>Lista de turmas</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.TurmaController.Get(System.Guid)">
            <summary>
            Busca uma turma pelo seu ID
            </summary>
            <param name="id">Id de turma</param>
            <returns>Turma procurada</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.TurmaController.Post(Projeto_EDUX.Domains.Turma)">
            <summary>
            Adiciona uma turma no sistema
            </summary>
            <param name="turma">Turma a ser adicionada</param>
            <returns>Turma adicionada</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.TurmaController.Put(System.Guid,Projeto_EDUX.Domains.Turma)">
            <summary>
            Alterar dados de uma turma
            </summary>
            <param name="id">Id da turma</param>
            <param name="turma">Turma a ser alterada</param>
            <returns>Turma alterada</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.TurmaController.Delete(System.Guid)">
            <summary>
            Remove uma turma do sistema
            </summary>
            <param name="id">Id da turma</param>
            <returns>Turma removida</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.UsuarioController.Get">
            <summary>
            Listar os Usuários  
            </summary>
            <returns>Lista de Usuários</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.UsuarioController.Get(System.Guid)">
            <summary>
            Buscar por ID 
            </summary>
            <param name="id">id da busca</param>
            <returns>o usuario do id</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.UsuarioController.Post(Projeto_EDUX.Domains.Usuario)">
            <summary>
            Adiciona um usuario nos sistema
            </summary>
            <param name="usuario">Nome do usuario</param>
            <returns>Usuario cadastrado</returns>
        </member>
        <member name="M:Projeto_EDUX.Controllers.UsuarioController.Put(System.Guid,Projeto_EDUX.Domains.Usuario)">
            <summary>
            Editar um Usuário
            </summary>
            <param name="id">id do usuário que deseja editar</param>
            <param name="usuario">usuário que deseja editar</param>
        </member>
        <member name="M:Projeto_EDUX.Controllers.UsuarioController.Delete(System.Guid)">
            <summary>
            Deletar um usuário
            </summary>
            <param name="id">id do usuário que deseja excluir</param>
        </member>
        <member name="P:Projeto_EDUX.Domains.AlunoTurma.Matricula">
            <summary>
            Define a classe alunoTurma
            </summary>
        </member>
        <member name="P:Projeto_EDUX.Domains.ProfessorTurma.descricao">
            <summary>
            Define a classe professorTurma
            </summary>
        </member>
        <member name="M:Projeto_EDUX.Repositories.AlunoTurmaRepository.Adicionar(Projeto_EDUX.Domains.AlunoTurma)">
            <summary>
            Adiciona um novo aluno
            </summary>
            <param name="alunoTurma">Lista de alunos da turma</param>
            <returns>Objeto Aluno</returns>
        </member>
        <member name="M:Projeto_EDUX.Repositories.CategoriaRepository.Adicionar(Projeto_EDUX.Domains.Categoria)">
            <summary>
            Adiciona um categoria
            </summary>
            <param name="categoria">Nome da categoria</param>
        </member>
        <member name="M:Projeto_EDUX.Repositories.CategoriaRepository.BuscarPorId(System.Guid)">
            <summary>
            Procura uma categoria pelo seu id
            </summary>
            <param name="id">Id da categoria</param>
            <returns>categoria procurado</returns>
        </member>
        <member name="M:Projeto_EDUX.Repositories.CategoriaRepository.Listar">
            <summary>
            Listar todos as categorias do sistema
            </summary>
            <returns>Lista de categorias</returns>
        </member>
        <member name="M:Projeto_EDUX.Repositories.CategoriaRepository.Remover(System.Guid)">
            <summary>
            Remove uma categoria
            </summary>
            <param name="id">Id da categoria</param>
        </member>
        <member name="M:Projeto_EDUX.Repositories.CursoRepository.Adicionar(Projeto_EDUX.Domains.Curso)">
            <summary>
            Adiciona um curso
            </summary>
            <param name="curso">Nome do curso</param>
        </member>
        <member name="M:Projeto_EDUX.Repositories.CursoRepository.BuscarPorId(System.Guid)">
            <summary>
            Procura um curso pelo seu id
            </summary>
            <param name="id">Id do curso</param>
            <returns>Curso procurado</returns>
        </member>
        <member name="M:Projeto_EDUX.Repositories.CursoRepository.Listar">
            <summary>
            Listar todos os cursos do sistema
            </summary>
            <returns>Lista de cursos</returns>
        </member>
        <member name="M:Projeto_EDUX.Repositories.CursoRepository.Remover(System.Guid)">
            <summary>
            Remove um curso
            </summary>
            <param name="id">Id do curso</param>
        </member>
        <member name="M:Projeto_EDUX.Repositories.CurtidaRepository.Adicionar(Projeto_EDUX.Domains.Curtida)">
            <summary>
            Adiciona uma nova curtida
            </summary>
            <param name="curtida">Lista as curtidas</param>
            <returns>Objeto Pedido</returns>
        </member>
        <member name="M:Projeto_EDUX.Repositories.InstituicaoRepository.BuscarPorId(System.Guid)">
            <summary>
            Busca uma isntituicao pelo seu nome
            </summary>
            <param name="id">Id da instituicao</param>
            <returns>Instituicao procurada</returns>
        </member>
        <member name="M:Projeto_EDUX.Repositories.InstituicaoRepository.BuscarPorNome(System.String)">
            <summary>
            Busca uma instituicao pelo seu nome
            </summary>
            <param name="nome">Nome da instituicao</param>
            <returns>Instituicao procurada</returns>
        </member>
        <member name="M:Projeto_EDUX.Repositories.InstituicaoRepository.Cadastrar(Projeto_EDUX.Domains.Instituicao)">
            <summary>
            Cadastra uma instituicao
            </summary>
            <param name="instituicao">Instuicao cadastrada</param>
        </member>
        <member name="M:Projeto_EDUX.Repositories.InstituicaoRepository.Remover(System.Guid)">
            <summary>
            Remove uma instituicao
            </summary>
            <param name="id">Id da instituicao</param>
        </member>
        <member name="M:Projeto_EDUX.Repositories.ObjetivoRepository.Adicionar(Projeto_EDUX.Domains.Objetivo)">
            <summary>
            Adiciona um objeto 
            </summary>
            <param name="objetivo">Nome do objetivvo </param>
        </member>
        <member name="M:Projeto_EDUX.Repositories.ObjetivoRepository.BuscarPorId(System.Guid)">
            <summary>
            Procura um objetivo pelo seu id
            </summary>
            <param name="id">Id do objetivo</param>
            <returns>Curso procurado</returns>
        </member>
        <member name="M:Projeto_EDUX.Repositories.ObjetivoRepository.Listar">
            <summary>
            Listar todos os objetivos do sistema
            </summary>
            <returns>Lista de objetivos</returns>
        </member>
        <member name="M:Projeto_EDUX.Repositories.ObjetivoRepository.Remover(System.Guid)">
            <summary>
            Listar todos os objetivos do sistema
            </summary>
            <returns>Lista de Objetivos</returns>
        </member>
        <member name="M:Projeto_EDUX.Repositories.ProfessorTurmaRepository.Adicionar(Projeto_EDUX.Domains.ProfessorTurma)">
            <summary>
            Adiciona um novo professor
            </summary>
            <param name="professorTurma">Lista de professores</param>
            <returns>Objeto Professor</returns>
        </member>
    </members>
</doc>
